!function(){"use strict";const e=1614597241633,s=`cache${e}`,n=["/client/client.30718474.js","/client/inject_styles.5607aec6.js","/client/index.1e0ff09e.js","/client/friendship.4e7658d7.js","/client/Table.224a101f.js","/client/ItemButton.af5e1878.js","/client/dashboard.ebcb2357.js","/client/bundles.073b2903.js","/client/[collection].42cdf638.js"].concat(["/service-worker-index.html","/CNAME","/farmer-spritesheets/accessories.png","/farmer-spritesheets/farmer_arms.png","/farmer-spritesheets/farmer_base.png","/farmer-spritesheets/farmer_base_bald.png","/farmer-spritesheets/farmer_girl_arms.png","/farmer-spritesheets/farmer_girl_base.png","/farmer-spritesheets/farmer_girl_base_bald.png","/farmer-spritesheets/hairstyles.png","/farmer-spritesheets/hats.png","/farmer-spritesheets/pants.png","/farmer-spritesheets/shirts.png","/farmer-spritesheets/shoeColors.png","/farmer-spritesheets/skinColors.png","/favicon.icns","/favicon.ico","/favicon.png","/images/artifacts.png","/images/bundles.png","/images/cooking.png","/images/crafting.png","/images/fall.png","/images/fish.png","/images/friendship.png","/images/heart-filled.png","/images/heart-outline.png","/images/minerals.png","/images/quality-0.png","/images/quality-1.png","/images/quality-2.png","/images/quality-3.png","/images/rainy.png","/images/shipping.png","/images/spring.png","/images/summer.png","/images/sunny.png","/images/winter.png","/logo-192.png","/logo-512.png","/manifest.json","/numbers/0.png","/numbers/1.png","/numbers/2.png","/numbers/3.png","/numbers/4.png","/numbers/5.png","/numbers/6.png","/numbers/7.png","/numbers/8.png","/numbers/9.png"]),t=new Set(n);self.addEventListener("install",(e=>{e.waitUntil(caches.open(s).then((e=>e.addAll(n))).then((()=>{self.skipWaiting()})))})),self.addEventListener("activate",(e=>{e.waitUntil(caches.keys().then((async e=>{for(const n of e)n!==s&&await caches.delete(n);self.clients.claim()})))})),self.addEventListener("fetch",(s=>{if("GET"!==s.request.method||s.request.headers.has("range"))return;const n=new URL(s.request.url),a=n.protocol.startsWith("http"),r=n.hostname===self.location.hostname&&n.port!==self.location.port,i=n.host===self.location.host&&t.has(n.pathname),g="only-if-cached"===s.request.cache&&!i;!a||r||g||s.respondWith((async()=>i&&await caches.match(s.request)||async function(s){const n=await caches.open(`offline${e}`);try{const e=await fetch(s);return n.put(s,e.clone()),e}catch(e){const t=await n.match(s);if(t)return t;throw e}}(s.request))())}))}();
